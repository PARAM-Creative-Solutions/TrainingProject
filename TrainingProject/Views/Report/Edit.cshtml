@model TrainingProjectDataLayer.DataLayer.Entities.DAL.ReportsType

@{
    Layout = null;
}
@Scripts.Render("~/bundles/jqueryval")
@using (Html.BeginForm("Edit", "Department", FormMethod.Post, new { id = "frmEditReportType" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ReportTypeID)
 
    <div class="form-horizontal has-feedback-left">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
       
        <div class="form-group">
            @Html.LabelFor(model => model.ReportName, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.EditorFor(model => model.ReportName, new { htmlAttributes = new { @class = "form-control has-feedback-left" } })
                <span class="fa fa-th form-control-feedback left" aria-hidden="true"></span>
                 @Html.ValidationMessageFor(model => model.ReportName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReportDesignType, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.DropDownListFor(model => model.ReportDesignType, (IEnumerable<SelectListItem>)ViewBag.ReportDesignTypes, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ReportDesignType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="ShowReportHeader" class="form-group" hidden>
            @Html.LabelFor(model => model.ReportHeader, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.EditorFor(model => model.ReportHeader, new { htmlAttributes = new { @class = "form-control has-feedback-left" } })
                <span class="fa fa-th form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.ReportHeader, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="ShowReportTittleName" class="form-group" hidden>
            @Html.LabelFor(model => model.ReportTittleName, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.EditorFor(model => model.ReportTittleName, new { htmlAttributes = new { @class = "form-control has-feedback-left" } })
                <span class="fa fa-th form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.ReportTittleName, "", new { @class = "text-danger" })
            </div>
        </div>       

        <div id="ShowReportTableView" class="form-group" hidden>
            @Html.LabelFor(model => model.ReportTableView, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.DropDownListFor(model => model.ReportTableView, (IEnumerable<SelectListItem>)ViewBag.ReportType, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ReportTableView, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="ShowReportDetailView" class="form-group" hidden>
            @Html.LabelFor(model => model.ReportDetailView, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.DropDownListFor(model => model.ReportDetailView, (IEnumerable<SelectListItem>)ViewBag.ReportType, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ReportDetailView, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
}
<script type="text/javascript">

    $(function () {
        ChangeReportDesighnType(); //this calls it on load
        $("#ReportDesignType").change(ChangeReportDesighnType);
    });

    function ChangeReportDesighnType() {
        var _reportDesignType = $("#ReportDesignType :selected").text();
        if (_reportDesignType == "BasicReport") {
            $("#ShowReportHeader").hide('slowly');
            $("#ShowReportTittleName").show('slowly');
            $("#ShowReportTableView").show('slowly');
            $("#ShowReportDetailView").show('slowly');
        }
        else if (_reportDesignType == "TableReport") {
            $("#ShowReportHeader").show('slowly');
            $("#ShowReportTableView").show('slowly');
            $("#ShowReportTittleName").hide('slowly');
            $("#ShowReportDetailView").hide('slowly');
        }
        else {
            $("#ShowReportHeader").show('slowly');
            $("#ShowReportTableView").show('slowly');
            $("#ShowReportDetailView").show('slowly');
            $("#ShowReportTittleName").hide('slowly');
        }
    }
</script>





