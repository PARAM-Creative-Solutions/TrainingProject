@model TrainingProjectDataLayer.DataLayer.Entities.DAL.Role

@{
    Layout = null;
}
@Scripts.Render("~/bundles/jqueryval")
@using (Html.BeginForm("Edit", "Roles", FormMethod.Post, new { id = "frmEditRole" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.RoleId)
    @Html.HiddenFor(x => x.PlantId)
    @Html.HiddenFor(x=>x.CreatedBy)
    @Html.HiddenFor(x => x.CreatedOn)

    <div class="form-horizontal has-feedback-left">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.RoleName, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
            <div class="col-md-9 col-sm-9 col-xs-12">
                @Html.EditorFor(model => model.RoleName, new { htmlAttributes = new { @class = "form-control has-feedback-left" } })
                <span class="fa fa-user form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RoleDescription, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
            <div class="col-md-9 col-sm-9 col-xs-12">
                @Html.EditorFor(model => model.RoleDescription, new { htmlAttributes = new { @class = "form-control has-feedback-left" } })
                <span class="fa fa-user form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.RoleDescription, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RightId, "User Rights", htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
            <div class="col-md-12 col-sm-12 col-xs-12">
                @Html.DropDownListFor(model => model.SelectedRights, (IEnumerable<SelectListItem>)ViewBag.AllRights, htmlAttributes: new { @class = "form-control",@style= "height: 250px;", @multiple = "multiple", @size = (((IEnumerable<SelectListItem>)ViewBag.AllRights).Count() + 1) })
                @Html.ValidationMessageFor(model => model.RightId, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}
<link href="~/Content/BootstrapDuallistbox/bootstrap-duallistbox.min.css" rel="stylesheet" />
<script src="~/Scripts/BootstrapDuallistbox/jquery.bootstrap-duallistbox.min.js"></script>
@*<link href="~/Content/css/select2.min.css" rel="stylesheet" />
<script src="~/Scripts/select2.min.js"></script>*@
<script type="text/javascript">
    $(document).ready(function () {
        var Duallistdemo = $("#SelectedRights").bootstrapDualListbox({
            filterTextClear: 'show all',
            filterPlaceHolder: 'Filter',
            moveSelectedLabel: 'Move selected',
            moveAllLabel: 'Move all',
            removeSelectedLabel: 'Remove selected',
            removeAllLabel: 'Remove all',
        });
        //$("#SelectedRights").css('width', '100%').select2({ allowClear: true })
    });
   
</script>